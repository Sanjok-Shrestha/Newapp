# -*- coding: utf-8 -*-
"""23047631SanjokShrestha.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1igPHrDEGRcmWA9CRVuG9NU3nNuWY5y2a
"""



import random

# Dungeon grid
dungeon_map = [
    ["S", ".", ".", "G"],
    [".", "M", ".", "O"],
    [".", ".", "T", "."],
    [".", ".", "D", "B"]
]

# Player
player = {"health": 100, "attack": 40, "inventory": []}
player_pos = [0, 0]

# Monster stats
monsters = {
    "M": {"name": "Skeleton", "health": 40, "attack": 10},
    "G": {"name": "Goblin", "health": 25, "attack": 8},
    "O": {"name": "Orc", "health": 60, "attack": 15},
    "T": {"name": "Troll", "health": 80, "attack": 12},
    "D": {"name": "Dragon", "health": 100, "attack": 20},
    "B": {"name": "Dungeon Boss", "health": 100, "attack": 30}
}

# Draw dungeon (2D map)
def draw_map():
    for i, row in enumerate(dungeon_map):
        line = ""
        for j, tile in enumerate(row):
            if [i, j] == player_pos:
                line += "P "  # Player
            else:
                line += tile + " "
        print(line)
    print()

# Combat system
def combat(monster_type):
    global player
    monster_data = monsters[monster_type]
    monster = {"health": monster_data["health"], "attack": monster_data["attack"]}
    print(f"A {monster_data['name']} appears with {monster['health']} HP!")

    while monster["health"] > 0 and player["health"] > 0:
        # Player attack
        monster["health"] -= player["attack"]
        print(f"You hit the {monster_data['name']}! Monster HP: {monster['health']}")
        if monster["health"] <= 0:
            print(f"You defeated the {monster_data['name']}!")
            # Loot
            if random.random() < 0.5:
                player["inventory"].append("potion")
                print("You found a potion!")
            player["inventory"].append(f"Loot from {monster_data['name']}")
            if monster_type == "B":
                print("🏆 You defeated the Dungeon Boss! You win!")
            dungeon_map[player_pos[0]][player_pos[1]] = "."  # Clear monster
            return

        # Monster attack
        player["health"] -= monster["attack"]
        print(f"The {monster_data['name']} hits you! Player HP: {player['health']}")
        if player["health"] <= 0:
            print("💀 You died... Game Over!")
            return

# Drink potion
def drink_potion():
    if "potion" in player["inventory"]:
        player["health"] += 50
        player["inventory"].remove("potion")
        print("🧪 You drank a potion and restored 30 HP!")
    else:
        print("You have no potions!")

# Movement
def move(direction):
    global player_pos
    x, y = player_pos
    if direction == "north" and x > 0:
        x -= 1
    elif direction == "south" and x < len(dungeon_map) - 1:
        x += 1
    elif direction == "west" and y > 0:
        y -= 1
    elif direction == "east" and y < len(dungeon_map[0]) - 1:
        y += 1
    else:
        print("You can't move that way!")
        return

    player_pos = [x, y]
    tile = dungeon_map[x][y]
    print(f"You moved to ({x},{y}) -> {tile}")

    if tile in monsters:
        combat(tile)

# Game loop
def game_loop():
    print("⚔️ Welcome to the 2D Dungeon Crawler!")
    print("Commands: north, south, east, west, map, inventory, drink potion, quit")
    draw_map()

    while True:
        cmd = input("> ").lower()
        if cmd in ["north", "south", "east", "west"]:
            move(cmd)
            draw_map()
        elif cmd == "map":
            draw_map()
        elif cmd == "inventory":
            print("Inventory:", player["inventory"])
        elif cmd == "drink potion":
            drink_potion()
        elif cmd == "quit":
            print("Exiting game.")
            break
        else:
            print("Unknown command.")

        if player["health"] <= 0:
            print("Game Over.")
            break

game_loop()